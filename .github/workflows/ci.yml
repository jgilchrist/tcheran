name: CI

on:
  push:
    branches:
      - master

jobs:

  metadata:
    runs-on: ubuntu-latest

    outputs:
      rust-version: ${{ steps.determine-rust-version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - id: determine-rust-version
        name: Determine Rust version
        run: |
          version=$(grep -m 1 'rust-version' Cargo.toml | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3)
          echo "Rust version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

  build-and-test:
    runs-on: ubuntu-latest
    needs: [metadata]

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        run: |
          rustup override set ${{ needs.metadata.outputs.rust-version }}

      - name: Test
        run: |
          cargo test --release --package engine

  build-and-test-tuner:
    runs-on: ubuntu-latest
    needs: [metadata]

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        run: |
          rustup override set ${{ needs.metadata.outputs.rust-version }}

      - name: Test
        run: |
          cargo test --release --package tuner

  build-and-test-release-build:
    runs-on: ubuntu-latest
    needs: [metadata]

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        run: |
          rustup override set ${{ needs.metadata.outputs.rust-version }}

      - name: Test
        run: |
          cargo test --release --package engine --features release
